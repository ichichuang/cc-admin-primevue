# CC-Admin 项目 Pug 语法和 UnoCSS 类名编码提示规则

此文件为 Cursor 编辑器提供 Pug 语法和 UnoCSS 类名的智能编码提示规则，解决特殊符号类名的语法兼容性问题。

## Pug 语法限制说明

### 特殊符号类名问题

由于 Pug 语法的限制，以下包含特殊符号的 UnoCSS 类名无法直接使用点语法：

```pug
// ❌ 错误：Pug 不支持这些特殊符号
.md:w-100
.w-100%
.bg-red!
.hover:bg-blue-500
.focus:ring-2
.dark:bg-gray-800
```

### 正确的 Pug 语法

对于包含特殊符号的类名，必须使用属性语法：

```pug
// ✅ 正确：使用 class 属性
div(class='md:w-100')
div(class='w-100%')
div(class='bg-red!')
div(class='hover:bg-blue-500')
div(class='focus:ring-2')
div(class='dark:bg-gray-800')
```

## UnoCSS 类名分类规则

### 可直接使用的类名（点语法）

以下类名可以直接使用 Pug 的点语法：

```pug
// ✅ 简单类名，无特殊符号
.flex
.items-center
.justify-between
.p-4
.m-2
.text-center
.bg-white
.text-black
.border
.rounded
.shadow
```

### 必须使用属性语法的类名

以下类名必须使用 `class` 属性语法：

#### 1. 响应式前缀类名

```pug
// ✅ 响应式前缀
div(class='sm:flex')
div(class='md:grid')
div(class='lg:hidden')
div(class='xl:block')
div(class='2xl:container')
```

#### 2. 百分比和特殊数值类名

```pug
// ✅ 百分比和特殊数值
div(class='w-100%')
div(class='h-50%')
div(class='w-1/2')
div(class='h-1/3')
div(class='w-1.5')
div(class='h-0.5')
```

#### 3. 重要标记类名

```pug
// ✅ 重要标记
div(class='bg-red!')
div(class='text-blue!')
div(class='p-4!')
div(class='m-2!')
```

#### 4. 状态变体类名

```pug
// ✅ 状态变体
div(class='hover:bg-blue-500')
div(class='focus:ring-2')
div(class='active:scale-95')
div(class='disabled:opacity-50')
div(class='group-hover:bg-gray-100')
```

#### 5. 暗色模式类名

```pug
// ✅ 暗色模式
div(class='dark:bg-gray-800')
div(class='dark:text-white')
div(class='dark:border-gray-700')
```

#### 6. 任意值类名

```pug
// ✅ 任意值
div(class='w-[200px]')
div(class='h-[calc(100vh-4rem)]')
div(class='bg-[#ff0000]')
div(class='text-[16px]')
```

#### 7. 组合类名

```pug
// ✅ 组合类名
.flex.items-center.justify-between.p-4.bg-white.rounded.shadow
.grid.grid-cols-1.gap-4(class='md:grid-cols-2 lg:grid-cols-3')
```

## 智能提示规则

### 类名自动补全策略

1. **简单类名优先使用点语法**

   ```pug
   // 输入: .flex
   // 自动补全: .flex
   ```

2. **特殊符号类名自动转换为属性语法**

   ```pug
   // 输入: md:w-100
   // 自动补全: div(class="md:w-100")
   ```

3. **混合类名智能处理**
   ```pug
   // 输入: flex md:grid
   // 自动补全: div(class="flex md:grid")
   ```

### 代码片段模板

#### 基础布局模板

```pug
// 输入: layout
// 输出:
.flex.items-center.justify-between.p-4
  .flex-1
  .flex.items-center.space-x-4
```

#### 响应式网格模板

```pug
// 输入: grid
// 输出:
.grid.grid-cols-1.gap-4(class='md:grid-cols-2 lg:grid-cols-3')
```

#### 卡片组件模板

```pug
// 输入: card
// 输出:
.bg-white.rounded-lg.shadow-md.p-6
  .text-lg.font-semibold.mb-4
  .text-gray-600
```

## 常见模式识别

### 检测特殊符号类名

自动识别以下模式并建议使用属性语法：

1. **冒号分隔的变体**
   - `hover:`, `focus:`, `active:`, `disabled:`
   - `sm:`, `md:`, `lg:`, `xl:`, `2xl:`
   - `dark:`, `group-hover:`

2. **特殊字符**
   - `%` (百分比)
   - `!` (重要标记)
   - `/` (分数)
   - `[` `]` (任意值)

3. **复杂数值**
   - 小数点数值
   - 分数值
   - 计算值

### 自动转换建议

当检测到不兼容的类名时，自动提供转换建议：

```pug
// 检测到: .md:w-100
// 建议转换为: div(class="md:w-100")

// 检测到: .w-100%
// 建议转换为: div(class="w-100%")

// 检测到: .hover:bg-blue-500
// 建议转换为: div(class="hover:bg-blue-500")
```

## 性能优化建议

### 类名分组策略

1. **简单类名优先**

   ```pug
   // ✅ 推荐：简单类名使用点语法
   .flex.items-center.justify-between
   
   // ✅ 复杂类名使用属性语法
   div(class='md:grid lg:flex')
   ```

2. **批量处理**

   ```pug
   // ✅ 推荐：同类名批量处理
   .flex.items-center.justify-between.p-4.bg-white.rounded.shadow
   ```

3. **避免过度嵌套**

   ```pug
   // ❌ 避免：过度嵌套
   .flex
     .items-center
       .justify-between
   
   // ✅ 推荐：扁平化结构
   .flex.items-center.justify-between
   ```

## 错误检测和修复

### 常见错误模式

1. **语法错误检测**

   ```pug
   // ❌ 错误：特殊符号类名使用点语法
   .md:w-100
   .w-100%
   .hover:bg-blue-500

   // ✅ 修复建议
   div(class="md:w-100")
   div(class="w-100%")
   div(class="hover:bg-blue-500")
   ```

2. **混合语法检测**

   ```pug
   // ❌ 错误：混合使用点语法和属性语法
   .flex(class='md:grid')
   
   // ✅ 修复建议
   .flex(class='md:grid')
   ```

### 自动修复规则

1. **特殊符号类名自动转换**
   - 检测到特殊符号时自动建议使用 `class` 属性
   - 提供一键转换功能

2. **语法一致性检查**
   - 确保同一元素使用统一的语法
   - 避免混合使用点语法和属性语法

## 开发工具集成

### Cursor 智能提示配置

1. **类名自动补全**
   - 基于 UnoCSS 配置提供类名补全
   - 自动识别特殊符号并提供正确的语法建议

2. **语法检查**
   - 实时检查 Pug 语法错误
   - 提供修复建议和自动修复功能

3. **代码片段**
   - 提供常用的布局和组件模板
   - 支持自定义代码片段

### 扩展性配置

```json
{
  "pug.unocss": {
    "enableAutoComplete": true,
    "enableSyntaxCheck": true,
    "enableAutoFix": true,
    "preferDotSyntax": true,
    "specialChars": [":", "%", "!", "/", "[", "]"],
    "responsivePrefixes": ["sm:", "md:", "lg:", "xl:", "2xl:"],
    "stateVariants": ["hover:", "focus:", "active:", "disabled:"],
    "darkModePrefix": "dark:"
  }
}
```

---

**注意**: 此配置确保 Pug 语法与 UnoCSS 类名的完美兼容，提供智能的编码提示和自动修复功能，提高开发效率。
description:
globs:
alwaysApply: false

---
